#!/bin/bash
clear
fun_bar () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "  \033[1;33mAGUARDE \033[1;37m- \033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "  \033[1;33mAGUARDE \033[1;37m- \033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
echo -e "           \033[1;33m● \033[1;32mATUALIZANDO LINUX, Pode Demorar \033[1;33m●\033[0m"
fun_update () {
    apt-get update > /dev/null 2>&1
}
fun_bar 'fun_update'
echo ""
clear
IP=$(wget -qO- ipv4.icanhazip.com)
link="https://raw.githubusercontent.com/backup-new"
echo -e "\E[44;1;37m           INSTALAR PAINEL SSH/DROP/SSL          \E[0m"
echo ""
echo -e "\033[1;37m Escolha uma opção:

[\033[1;30m1\033[1;33m] PAINEL V11\033[1;33m
[\033[1;30m2\033[1;33m] PAINEL V12\033[1;33m
[\033[1;30m3\033[1;33m] PAINEL V20\033[1;33m
[\033[1;30m4\033[1;33m] PAINEL V23\033[1;33m"
echo ""
echo -ne "\033[1;32m ESCOLHA UM PAINEL DE 1 a 4\033[1;37m: "; read _key_
if [[ -z $_key_ ]]; then
echo ""
echo -e "\033[1;31m NUMERO INVALIDO ! \033[1;32m"
sleep 1
clear; exit
fi
wget http://$link/$_key_/install > /dev/null 2>&1
sleep 1
if [[ -f $HOME/inst ]]; then
echo -e "\n\033[1;32m NUMERO VALIDO ! \033[1;32m"
echo ""
sleep 1
echo -ne "\033[1;32m PARA CONTINUAR CONFIRME SEU IP: \033[1;37m"; read -e -i $IP ipdovps
if [[ -z "$ipdovps" ]];then
echo ""
echo -e "\033[1;31m IP INVALIDO\033[1;32m"
sleep 1
clear; exit
fi
source $HOME/inst
else
echo -e "\n\033[1;31m NUMERO INVALIDO !\033[0m"
rm /root/inst > /dev/null 2>&1
sleep 1
clear; exit
fi
clear
rm /root/install > /dev/null 2>&1
rm /root/inst > /dev/null 2>&1